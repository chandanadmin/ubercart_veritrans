<?php

/**
 * @file
 * Defines the veritrans payment gateway.
 */

/**
 * Implements hook_libraries_info().
 */
function uc_veritrans_libraries_info() {
  $libraries['veritrans'] = array(
    'name' => 'PHP client library for Veritrans',
    'vendor url' => 'https://github.com/veritrans/veritrans-php',
    'download url' => 'https://github.com/veritrans/veritrans-php/archive/master.zip',
    'path' => 'Veritrans',
    'version arguments' => array(
      'file' => 'README.md',
      'pattern' => '/Veritrans (\d+)/',
      'lines' => 6,
    ),
    'files' => array(
      'php' => array(
        'Config.php',
        'Transaction.php',
        'ApiRequestor.php',
        'Notification.php',
        'VtDirect.php',
        'VtWeb.php',
        'Sanitizer.php',
      ),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_menu().
 */
function uc_veritrans_menu() {
  $items = array();

  $items['vt_web/%uc_order'] = array(
    'title' => 'Veritrans payment complete',
    'page callback' => 'uc_veritrans_vtweb_payment_complete',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'uc_veritrans.inc',
  );

  $items['vt_web/notify'] = array(
    'title' => 'Vt Web Payment Notificataion',
    'page callback' => 'uc_veritrans_vt_web_payment_notification',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'uc_veritrans.inc',
  );

  $items['vt_web/success'] = array(
    'title' => 'Vt Web Payment Success',
    'page callback' => 'uc_veritrans_vt_web_payment_success',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'uc_veritrans.inc',
  );

  $items['vt_web/unfinish'] = array(
    'title' => 'Vt Web Payment Unfinsh',
    'page callback' => 'uc_veritrans_vt_web_payment_unfinish',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'uc_veritrans.inc',
  );

  $items['vt_web/error'] = array(
    'title' => 'Vt Web Payment Error',
    'page callback' => 'uc_veritrans_vt_web_payment_error',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'uc_veritrans.inc',
  );

  return $items;
}

/**
 * Implements hook_uc_payment_method().
 */
function uc_veritrans_uc_payment_method() {
  $methods['vt_web'] = array(
    'name' => t('Veritrans'),
    'title' => t('Veritrans'),
    'review' => t('Veritrans'),
    'desc' => t('Redirect users to submit payments through Veritrans.'),
    'callback' => 'uc_veritrans_payment_method_vt_web',
    'redirect' => 'uc_veritrans_vt_web_payment_form',
    'weight' => 1,
    'checkout' => FALSE,
    'no_gateway' => TRUE,
  );
  return $methods;
}

/**
 * Veritrans checkout page alter.
 */
function uc_veritrans_vt_web_payment_form($form, &$form_state, $order) {
  $form['#action'] = url('vt_web/' . $order->order_id);
  $form['#method'] = 'GET';

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Proceed to payment'),
  );
  return $form;
}

/**
 * Veritrans settings page.
 */
function uc_veritrans_payment_method_vt_web($op, &$arg1) {
  switch ($op) {
    case 'settings':
      $form['uc_veritrans_server_key'] = array(
        '#type' => 'textfield',
        '#title' => t('Server Key'),
        '#description' => t('Your Veritrans Server key.'),
        '#default_value' => variable_get('uc_veritrans_server_key', ''),
        '#size' => 50,
        '#required' => TRUE,
      );

      $form['uc_veritrans_payment_mode'] = array(
        '#type' => 'select',
        '#title' => t('Payment mode'),
        '#description' => t('The mode for capturing payment.'),
        '#options' => array(
          'LIVE' => t('Live transactions'),
          'TEST' => t('Test transactions'),
        ),
        '#default_value' => variable_get('uc_veritrans_payment_mode', ''),
      );
      $form['uc_veritrans_error_redirect_url'] = array(
        '#type' => 'textfield',
        '#title' => t('Error Url'),
        '#description' => t('The mode for error url.'),
        '#default_value' => variable_get('uc_veritrans_error_redirect_url', ''),
        '#element_validate' => array('uc_veritrans_link_validate'),
      );
      $form['uc_veritrans_unfinish_redirect_url'] = array(
        '#type' => 'textfield',
        '#title' => t('Unfinish Url'),
        '#description' => t('The mode for unfinish url.'),
        '#default_value' => variable_get('uc_veritrans_unfinish_redirect_url', ''),
        '#element_validate' => array('uc_veritrans_link_validate'),
      );
      $form['uc_veritrans_finish_redirect_url'] = array(
        '#type' => 'textfield',
        '#title' => t('Finish Url'),
        '#description' => t('The mode for finish url.'),
        '#default_value' => variable_get('uc_veritrans_finish_redirect_url', ''),
        '#element_validate' => array('uc_veritrans_link_validate'),
      );
      $form['uc_veritrans_debugging'] = array(
        '#type' => 'checkbox',
        '#title' => t('Debug'),
        '#description' => t('Check the response from veritrans.'),
        '#default_value' => variable_get('uc_veritrans_debugging', FALSE),
      );
      return $form;
  }
}

/**
 * Link Validation
 */
function uc_veritrans_link_validate($element, &$form_state) {
  $element_name = $element['#name'];
  $values = $form_state['values'];
  $path = drupal_get_normal_path($values[$element_name]);
  if (!trim($path) || !drupal_valid_path($path, TRUE)) {
    form_set_error($element_name, t("The path '@path' is invalid.", array('@path' => $path)));
  }
}